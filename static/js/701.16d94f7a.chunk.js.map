{"version":3,"file":"static/js/701.16d94f7a.chunk.js","mappings":"+JAaA,EAVgB,WAEZ,OAEJ,gBAAKA,UAAU,OAAM,SAAC,mBAKtB,C","sources":["components/Profile/Settings/Settings.jsx"],"sourcesContent":["import React from \"react\";\r\nimport q from'./Settings.module.css';\r\n\r\nconst Settings =() =>{\r\n\r\n    return(\r\n        \r\n<div className='main'>\r\n      its my Settings\r\n       </div> \r\n\r\n    );\r\n}\r\nexport default Settings;\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n\r\n// export default function MyForm(props) {\r\n//   const { register, handleSubmit, formState: { errors }, reset } = useForm();\r\n//   const [canSubmit, setCanSubmit] = useState(true);\r\n\r\n//   const onSubmit = (data) => {\r\n//     // Обробка даних форми тут\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     // Перевірка чи є помилки валідації\r\n//     if (Object.keys(errors).length > 0) {\r\n//       setCanSubmit(false);\r\n//     } else {\r\n//       setCanSubmit(true);\r\n//     }\r\n//   }, [errors]);\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit(onSubmit)}>\r\n//       {/* Реєстрація полів форми */}\r\n//       <input {...register('firstName', { required: true })} />\r\n//       <input {...register('lastName', { required: true })} />\r\n\r\n//       {/* Відображення помилок валідації */}\r\n//       {errors.firstName && <p>Введіть ім'я</p>}\r\n//       {errors.lastName && <p>Введіть прізвище</p>}\r\n\r\n//       {/* Кнопка подачі форми */}\r\n//       <button type=\"submit\" disabled={!canSubmit}>Подати</button>\r\n//     </form>\r\n//   );\r\n// }\r\n"],"names":["className"],"sourceRoot":""}